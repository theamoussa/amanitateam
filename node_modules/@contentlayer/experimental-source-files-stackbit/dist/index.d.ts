import type * as SourceFiles from '@contentlayer/source-files';
import * as Stackbit from '@stackbit/sdk';
/** NOTE Overrides are currently not validated - use carefully */
export type ContentlayerOverrideArgs<TDocumentTypeNames extends string> = {
    documentTypes?: Partial<{
        [TDocumentTypeName in TDocumentTypeNames]: ContentlayerOverrideDocumentType<TDocumentTypeName>;
    }>;
    nestedTypes?: Partial<{
        [TDocumentTypeName in TDocumentTypeNames]: ContentlayerOverrideNestedType;
    }>;
};
export type ContentlayerOverrideDocumentType<TDocumentTypeName extends string> = {
    filePathPattern?: string;
    fields?: {
        [fieldName: string]: {
            type: SourceFiles.FieldDefType;
        };
    };
    computedFields?: SourceFiles.ComputedFields<TDocumentTypeName>;
};
export type ContentlayerOverrideNestedType = {
    fields?: {
        [fieldName: string]: {
            type: SourceFiles.FieldDefType;
        };
    };
};
/**
 * @example
 * ```ts
 * // contentlayer.config.ts
 * import { makeSource } from 'contentlayer/source-files'
 * import { loadStackbitConfigAsDocumentTypes } from '@contentlayer/experimental-source-files-stackbit'
 *
 * // Looks for `stackbit.yaml` in the current directory
 * export default loadStackbitConfigAsDocumentTypes().then((documentTypes) => {
 *   return makeSource({ contentDirPath: 'content', documentTypes })
 * })
 * ```
 */
export declare const loadStackbitConfigAsDocumentTypes: <TDocumentTypeNames extends string>(options?: {
    dirPath: string;
}, overrideArgs?: ContentlayerOverrideArgs<TDocumentTypeNames>) => Promise<SourceFiles.DocumentType[]>;
/**
 *
 * @example
 * ```ts
 * // contentlayer.config.ts
 * import { makeSource } from 'contentlayer/source-files'
 * import { stackbitConfigToDocumentTypes } from '@contentlayer/source-files-stackbit'
 * import stackbitConfig from './stackbit.config.js'
 *
 * const documentTypes = stackbitConfigToDocumentTypes(stackbitConfig)
 *
 * export default makeSource({ contentDirPath: 'content', documentTypes })
 * ```
 */
export declare const stackbitConfigToDocumentTypes: <TDocumentTypeNames extends string>(stackbitConfig: Stackbit.Config, overrideArgs?: ContentlayerOverrideArgs<TDocumentTypeNames>) => SourceFiles.DocumentType[];
//# sourceMappingURL=index.d.ts.map