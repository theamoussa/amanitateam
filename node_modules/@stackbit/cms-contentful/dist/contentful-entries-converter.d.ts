import type { EntryProps, AssetProps, UserProps, SnapshotProps } from 'contentful-management';
import type { Document, Asset, Cache, DocumentVersionWithDocument } from '@stackbit/types';
export type DocumentContext = {
    sys: {
        type: string;
        version: number;
        publishedVersion?: number;
        archivedVersion?: number;
    };
};
export type AssetContext = DocumentContext;
export type ContextualDocument = Document<DocumentContext>;
export type ContextualAsset = Asset<AssetContext>;
export type EntityProps = EntryProps | AssetProps;
export type GetModelByName = Cache['getModelByName'];
export type ConvertEntriesOptions = {
    entries: EntityProps[];
    getModelByName: GetModelByName;
    userMap: Record<string, UserProps>;
    defaultLocale: string;
    projectUrl: string;
};
export declare function convertEntities({ entries, getModelByName, userMap, defaultLocale, projectUrl }: ConvertEntriesOptions): ContextualDocument[];
export type ConvertAssetsOptions = {
    assets: AssetProps[];
    userMap: Record<string, UserProps>;
    defaultLocale: string;
    projectUrl: string;
};
export declare function convertAssets({ assets, userMap, defaultLocale, projectUrl }: ConvertAssetsOptions): ContextualAsset[];
export type ConvertEntryOptions = {
    entry: EntryProps;
    getModelByName: GetModelByName;
    userMap: Record<string, UserProps>;
    defaultLocale: string;
    projectUrl: string;
};
export declare function convertEntry({ entry, getModelByName, userMap, defaultLocale, projectUrl }: ConvertEntryOptions): ContextualDocument | undefined;
export type ConvertAssetOptions = {
    asset: AssetProps;
    userMap: Record<string, UserProps>;
    defaultLocale: string;
    projectUrl: string;
};
export declare function convertAsset({ asset, userMap, defaultLocale, projectUrl }: ConvertAssetOptions): ContextualAsset | undefined;
export declare function convertDocumentVersions({ entries, userMap, defaultLocale, getModelByName, projectUrl }: {
    entries: SnapshotProps<EntryProps>[];
    userMap: Record<string, UserProps>;
    getModelByName: GetModelByName;
    defaultLocale: string;
    projectUrl: string;
}): DocumentVersionWithDocument[];
//# sourceMappingURL=contentful-entries-converter.d.ts.map