import {
    StackbitConfig,
    ObjectModel as StackbitConfigObjectModel,
    ConfigModel as StackbitConfigConfigModel,
    PageModel as StackbitConfigPageModel,
    DataModel as StackbitConfigDataModel,
    ModelCommonFields,
    Field,
    FieldListItems
} from '@stackbit/types';

// re-export types for backward compatibility
export type RawConfig = StackbitConfig;
export {
    StackbitConfig,
    Import,
    ContentfulImport,
    SanityImport,
    ContentModelMap,
    ContentModel,
    PresetSource,
    PresetSourceFiles,
    ModelsSource,
    ModelsSourceFiles,
    ModelsSourceContentful,
    ModelsSourceSanity,
    Field,
    FieldType,
    FieldSpecificProps,
    FieldCommonProps,
    FieldBasic,
    FieldEnum,
    FieldImage,
    FieldNumber,
    FieldObject,
    FieldModel,
    FieldReference,
    FieldStyle,
    FieldList,
    FieldListObject,
    FieldListModel,
    FieldListReference,
    FieldBasicProps,
    FieldEnumProps,
    FieldEnumDropdownProps,
    FieldEnumThumbnailsProps,
    FieldEnumPaletteProps,
    FieldEnumOptionValue,
    FieldEnumOptionObject,
    FieldEnumOptionThumbnails,
    FieldEnumOptionPalette,
    FieldImageProps,
    FieldNumberProps,
    FieldObjectProps,
    FieldGroupItem,
    FieldModelProps,
    FieldReferenceProps,
    FieldCrossReferenceProps,
    StyleProps,
    FieldStyleProps,
    FieldListProps,
    FieldListItems
} from '@stackbit/types';

export interface StackbitConfigWithPaths extends StackbitConfig {
    dirPath: string;
    filePath: string;
};

export interface Config extends Omit<StackbitConfig, 'models' | 'customContentReload' | 'experimental'> {
    dirPath: string;
    filePath: string;
    models: Model[];
    presets?: PresetMap;
    internalStackbitRunnerOptions?: SSGRunOptions;
    hcrHandled?: boolean;
}

export type PresetMap = Record<string, Preset>;

export interface Preset {
    label: string;
    modelName: string;
    srcType: string;
    srcProjectId: string;
    thumbnail?: string;
    locale?: string;
    metadata: any;
    data: Record<string, any>;
}

export interface SSGRunOptions {
    displayName?: string;
    triggerInstallFiles?: string[];
    directPaths?: string[];
    directRoutes?: Record<string, string>;
    patterns?: {
        doneStart?: string[];
    };
}

/******************************
 *** Normalized Model Types ***
 ******************************/

export type Model = ObjectModel | DataModel | PageModel | ConfigModel;

export type ObjectModel = StackbitConfigObjectModel & BaseModel;
export type DataModel = DataModelSingle | DataModelList;
export type PageModel = StackbitConfigPageModel & BaseModel;
export type ConfigModel = StackbitConfigConfigModel & BaseModel;

export type ImageModel = {
    type: 'image';
    name: '__image_model';
    label?: string;
    labelField?: string;
    fields?: Field[];
    source?: string;
};

export interface DataModelSingle extends StackbitConfigDataModel, BaseModel {
    isList?: false;
}

export interface DataModelList extends StackbitConfigDataModel, BaseModel {
    isList: true;
    items: FieldListItems;
}

export type BaseModel = ModelMetadata & { presets?: string[] };

interface ModelMetadata {
    __metadata?: {
        filePath?: string;
        invalid?: boolean;
    };
}

/***********************
 *** Raw Model Types ***
 ***********************/

export type YamlModel = YamlObjectModel | YamlPageModel | YamlConfigModel | YamlDataModel;

export type YamlModelMap = Record<string, YamlModel>;

export interface YamlBaseModel extends Omit<ModelCommonFields, 'name'>, ModelMetadata {
    type: YamlModel['type'];
}

export interface YamlObjectModel extends Omit<StackbitConfigObjectModel, 'name'>, ModelMetadata {}

export interface YamlPageModel extends Omit<StackbitConfigPageModel, 'name'>, ModelMetadata {}

export interface YamlConfigModel extends Omit<StackbitConfigConfigModel, 'name'>, ModelMetadata {}

export type YamlDataModel = YamlDataModelSingle | YamlDataModelList;

export interface YamlDataModelSingle extends Omit<StackbitConfigDataModel, 'name'>, ModelMetadata {
    isList?: false;
}

export interface YamlDataModelList extends Omit<StackbitConfigDataModel, 'name'>, ModelMetadata {
    isList: true;
    items: FieldListItems;
}
