import { Config } from '../config/config-types';
interface BaseMetadata {
    filePath: string;
}
interface ModeledMetadata extends BaseMetadata {
    modelName: string;
}
interface UnmodeledMetadata extends BaseMetadata {
    modelName: null;
}
declare type Metadata = ModeledMetadata | UnmodeledMetadata;
export interface ContentItem {
    [index: string]: any;
    __metadata: Metadata;
}
export interface ContentLoaderOptions {
    dirPath: string;
    config: Config;
    skipUnmodeledContent: boolean;
}
export interface ContentLoaderResult {
    valid: boolean;
    contentItems: ContentItem[];
    errors: Error[];
}
export declare function loadContent({ dirPath, config, skipUnmodeledContent }: ContentLoaderOptions): Promise<ContentLoaderResult>;
export {};
//# sourceMappingURL=content-loader.d.ts.map