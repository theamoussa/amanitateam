import { ConfigLoadError, StackbitConfigNotFoundError } from './config-errors';
import { Config } from './config-types';
export declare type LoadStaticStackbitConfigOptions = {
    dirPath: string;
    secondaryDirPath?: string;
    logger?: any;
};
export declare type StaticConfig = Pick<Config, 'stackbitVersion' | 'nodeVersion' | 'ssgName' | 'ssgVersion' | 'cmsName' | 'postGitCloneCommand' | 'preInstallCommand' | 'postInstallCommand' | 'import' | 'buildCommand' | 'publishDir' | 'dirPath' | 'filePath'> & {
    hasContentSources?: boolean;
};
export declare type LoadStaticConfigResult = {
    config: StaticConfig | null;
    errors: (ConfigLoadError | StackbitConfigNotFoundError)[];
};
export declare function loadStaticConfig({ dirPath, secondaryDirPath, logger }: LoadStaticStackbitConfigOptions): Promise<LoadStaticConfigResult>;
//# sourceMappingURL=config-loader-static.d.ts.map