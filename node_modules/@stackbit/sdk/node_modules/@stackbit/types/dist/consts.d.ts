import type { FieldType } from './model-fields';
/**
 * Front-end frameworks supported by Stackbit without any additional
 * configuration. For custom front-end framework, specify 'custom' and provide
 * additional options to configure Stackbit.
 */
export declare const SSG_NAMES: readonly ["custom", "nextjs", "gatsby", "jekyll", "hugo", "eleventy", "vuepress", "gridsome", "nuxt", "sapper", "hexo", "unibit"];
/**
 * The list of Content Management Systems (CMS) supported by Stackbit.
 * With the introduction of custom Content-Sources, there is no need to specify
 * 'cmsName' anymore.
 */
export declare const CMS_NAMES: readonly ["git", "contentful", "sanity", "forestry", "netlifycms"];
export declare const FIELD_TYPE: {
    [Type in FieldType as Type extends 'cross-reference' ? 'crossReference' : Type]: Type;
};
export declare const FIELD_TYPES: readonly ["string", "url", "slug", "text", "markdown", "html", "number", "boolean", "enum", "date", "datetime", "color", "image", "file", "json", "richText", "object", "model", "reference", "cross-reference", "style", "list"];
export declare const STYLE_PROPS: readonly ["objectFit", "objectPosition", "flexDirection", "justifyContent", "justifyItems", "justifySelf", "alignContent", "alignItems", "alignSelf", "padding", "margin", "width", "height", "fontFamily", "fontSize", "fontStyle", "fontWeight", "textAlign", "textColor", "textDecoration", "backgroundColor", "backgroundPosition", "backgroundSize", "borderRadius", "borderWidth", "borderColor", "borderStyle", "boxShadow", "opacity"];
export declare const STYLE_PROPS_VALUES: {
    nineRegions: string[];
    objectFit: string[];
    flexDirection: string[];
    justifyContent: string[];
    justifyItems: string[];
    justifySelf: string[];
    alignContent: string[];
    alignItems: string[];
    alignSelf: string[];
    width: string[];
    height: string[];
    fontStyle: string[];
    fontWeight: string[];
    textAlign: string[];
    textDecoration: string[];
    backgroundSize: string[];
    borderRadius: string[];
    borderStyle: string[];
    boxShadow: string[];
};
export declare const RICH_TEXT_NODE_TYPES: {
    readonly DOCUMENT: "document";
    readonly PARAGRAPH: "p";
    readonly HEADING_1: "h1";
    readonly HEADING_2: "h2";
    readonly HEADING_3: "h3";
    readonly HEADING_4: "h4";
    readonly HEADING_5: "h5";
    readonly HEADING_6: "h6";
    readonly OL: "ol";
    readonly UL: "ul";
    readonly LIST_ITEM: "li";
    readonly HR: "hr";
    readonly BLOCKQUOTE: "blockquote";
    readonly LINK: "a";
    readonly REFERENCE: "reference";
};
export declare const RICH_TEXT_MARK_TYPES: {
    readonly BOLD: "bold";
    readonly ITALIC: "italic";
    readonly UNDERLINE: "underline";
    readonly CODE: "code";
};
export declare const RICH_TEXT_HINT_MAX_LENGTH = 200;
//# sourceMappingURL=consts.d.ts.map