import { DocumentRichTextFieldValue, DocumentStringLikeFieldTypes, DocumentStyleFieldValue, ExtractByType } from './content-store-document-fields';
import { Document } from './content-store-documents';
import { FieldType } from '@stackbit/types';
import type { ReferencedItem } from './references-types';

export interface APIDocument extends Omit<Document, 'getPreview' | 'fields'> {
    srcObjectLabel: string;
    fields?: Record<string, DocumentFieldAPIV2>;
    references?: {
        direct: ReferencedItem[];
    };
}

/**
 * string-like fields (e.g., string, url, slug, text, html, enum, date, datetime, color)
 * The 'markdown' is not included, although it is a string field, because it has
 * the `multiElement` and `isUnset` fields.
 * The 'file' also has `isUnset` field and should have its own type anyway.
 */
export type DocumentStringLikeFieldAPIV2 = DocumentStringLikeFieldForTypeAPIV2<DocumentStringLikeFieldTypes>;
export type DocumentStringLikeFieldNonLocalizedAPIV2 = APIV2DistributeDocumentStringLikeFieldNonLocalized<DocumentStringLikeFieldTypes>;
export type DocumentStringLikeFieldLocalizedAPIV2 = APIV2DistributeDocumentStringFieldLocalized<DocumentStringLikeFieldTypes>;

export type DocumentStringLikeFieldForTypeAPIV2<Type> = Type extends DocumentStringLikeFieldTypes
    ? DocumentStringLikeFieldNonLocalizedForTypeAPIV2<Type> | DocumentStringLikeFieldLocalizedForTypeAPIV2<Type>
    : never;
export type APIV2DistributeDocumentStringLikeFieldNonLocalized<Type> = Type extends DocumentStringLikeFieldTypes
    ? DocumentStringLikeFieldNonLocalizedForTypeAPIV2<Type>
    : never;
export type APIV2DistributeDocumentStringFieldLocalized<Type> = Type extends DocumentStringLikeFieldTypes
    ? DocumentStringLikeFieldLocalizedForTypeAPIV2<Type>
    : never;

export interface DocumentStringLikeFieldNonLocalizedForTypeAPIV2<Type extends DocumentStringLikeFieldTypes> {
    type: Type;
    label?: string;
    localized?: false;
    value?: string;
}

export interface DocumentStringLikeFieldLocalizedForTypeAPIV2<Type extends DocumentStringLikeFieldTypes> {
    type: Type;
    label?: string;
    localized: true;
    locales: Record<
        string,
        {
            locale: string;
            value: string;
        }
    >;
}

/**
 * markdown
 */
export type DocumentMarkdownFieldAPIV2 = DocumentMarkdownFieldNonLocalizedAPIV2 | DocumentMarkdownFieldLocalizedAPIV2;

export type DocumentMarkdownFieldNonLocalizedAPIV2 = {
    type: 'markdown';
    label?: string;
    localized?: false;
    multiElement?: boolean;
    value?: string;
} & ({ isUnset: true; value?: never } | { isUnset?: false; value: string });

export interface DocumentMarkdownFieldLocalizedAPIV2 {
    type: 'markdown';
    label?: string;
    localized: true;
    locales: Record<
        string,
        {
            locale: string;
            multiElement?: boolean;
            value: string;
        }
    >;
}

/**
 * number
 */
export type DocumentNumberFieldAPIV2 = DocumentNumberFieldNonLocalizedAPIV2 | DocumentNumberFieldLocalizedAPIV2;
export interface DocumentNumberFieldNonLocalizedAPIV2 {
    type: 'number';
    label?: string;
    localized?: false;
    value?: number;
}
export interface DocumentNumberFieldLocalizedAPIV2 {
    type: 'number';
    label?: string;
    localized: true;
    locales: Record<
        string,
        {
            locale: string;
            value: number;
        }
    >;
}

/**
 * boolean
 */
export type DocumentBooleanFieldAPIV2 = DocumentBooleanFieldNonLocalizedAPIV2 | DocumentBooleanFieldLocalizedAPIV2;
export interface DocumentBooleanFieldNonLocalizedAPIV2 {
    type: 'boolean';
    label?: string;
    localized?: false;
    value?: boolean;
}
export interface DocumentBooleanFieldLocalizedAPIV2 {
    type: 'boolean';
    label?: string;
    localized: true;
    locales: Record<
        string,
        {
            locale: string;
            value: boolean;
        }
    >;
}

/**
 * json
 */
export type DocumentJsonFieldAPIV2 = DocumentJsonFieldNonLocalizedAPIV2 | DocumentJsonFieldLocalizedAPIV2;
export type DocumentJsonFieldNonLocalizedAPIV2 = {
    type: 'json';
    label?: string;
    localized?: false;
    value?: any;
} & ({ isUnset: true; value?: never } | { isUnset?: false; value: any });
export interface DocumentJsonFieldLocalizedAPIV2 {
    type: 'json';
    label?: string;
    localized: true;
    locales: Record<
        string,
        {
            locale: string;
            value: any;
        }
    >;
}

/**
 * style
 */
export type DocumentStyleFieldAPIV2 = DocumentStyleFieldNonLocalizedAPIV2 | DocumentStyleFieldLocalizedAPIV2;
export interface DocumentStyleFieldNonLocalizedAPIV2 {
    type: 'style';
    label?: string;
    localized?: false;
    value?: DocumentStyleFieldValue;
}
export interface DocumentStyleFieldLocalizedAPIV2 {
    type: 'style';
    label?: string;
    localized: true;
    locales: Record<
        string,
        {
            locale: string;
            value: DocumentStyleFieldValue;
        }
    >;
}

/**
 * richText
 */
export type DocumentRichTextFieldAPIV2 = DocumentRichTextFieldNonLocalizedAPIV2 | DocumentRichTextFieldLocalizedAPIV2;
export type DocumentRichTextFieldNonLocalizedAPIV2 = {
    type: 'richText';
    label?: string;
    localized?: false;
    hint?: string;
    multiElement?: boolean;
    value?: DocumentRichTextFieldValue;
} & ({ isUnset: true; value?: never } | { isUnset?: false; value: DocumentRichTextFieldValue });
export interface DocumentRichTextFieldLocalizedAPIV2 {
    type: 'richText';
    label?: string;
    localized: true;
    locales: Record<
        string,
        {
            locale: string;
            hint?: string;
            multiElement?: boolean;
            value: DocumentRichTextFieldValue;
        }
    >;
}

/**
 * file
 */
export type DocumentFileFieldAPIV2 = DocumentFileFieldNonLocalizedAPIV2 | DocumentFileFieldLocalizedAPIV2;
export type DocumentFileFieldNonLocalizedAPIV2 = {
    type: 'file';
    label?: string;
    localized?: false;
    value?: any;
} & ({ isUnset: true; value?: never } | { isUnset?: false; value: any });

export interface DocumentFileFieldLocalizedAPIV2 {
    type: 'file';
    label?: string;
    localized: true;
    locales: Record<
        string,
        {
            locale: string;
            value: any;
        }
    >;
}

/**
 * object
 */
export type DocumentObjectFieldAPIV2 = DocumentObjectFieldNonLocalizedAPIV2 | DocumentObjectFieldLocalizedAPIV2;
export type DocumentObjectFieldNonLocalizedAPIV2 = {
    type: 'object';
    label?: string;
    localized?: false;
} & (
    | { isUnset: true }
    | {
          isUnset?: false;
          srcObjectLabel: string;
          fields: Record<string, DocumentFieldAPIV2>;
      }
);
export interface DocumentObjectFieldLocalizedAPIV2 {
    type: 'object';
    label?: string;
    localized: true;
    locales: Record<
        string,
        {
            locale: string;
            srcObjectLabel: string;
            fields: Record<string, DocumentFieldAPIV2>;
        }
    >;
}

/**
 * model
 */
export type DocumentModelFieldAPIV2 = DocumentModelFieldNonLocalizedAPIV2 | DocumentModelFieldLocalizedAPIV2;
export type DocumentModelFieldNonLocalizedAPIV2 = {
    type: 'model';
    label?: string;
    localized?: false;
} & (
    | { isUnset: true }
    | {
          isUnset?: false;
          srcModelName: string;
          srcModelLabel: string;
          srcObjectLabel: string;
          fields: Record<string, DocumentFieldAPIV2>;
      }
);
export interface DocumentModelFieldLocalizedAPIV2 {
    type: 'model';
    label?: string;
    localized: true;
    locales: Record<
        string,
        {
            locale: string;
            srcModelName: string;
            srcModelLabel: string;
            srcObjectLabel: string;
            fields: Record<string, DocumentFieldAPIV2>;
        }
    >;
}

/**
 * list
 */
export type DocumentListFieldAPIV2 = DocumentListFieldNonLocalizedAPIV2 | DocumentListFieldLocalizedAPIV2;
export type DocumentListFieldItemsAPIV2 = Exclude<DocumentFieldNonLocalizedAPIV2, DocumentListFieldNonLocalizedAPIV2>;
export interface DocumentListFieldNonLocalizedAPIV2 {
    type: 'list';
    label?: string;
    localized?: false;
    items: DocumentListFieldItemsAPIV2[];
}

export interface DocumentListFieldLocalizedAPIV2 {
    type: 'list';
    label?: string;
    localized: true;
    locales: Record<
        string,
        {
            locale: string;
            items: DocumentListFieldItemsAPIV2[];
        }
    >;
}

/**
 * reference
 */
export type DocumentReferenceFieldAPIV2 = DocumentReferenceFieldNonLocalizedAPIV2 | DocumentReferenceFieldLocalizedAPIV2;
export type DocumentReferenceFieldNonLocalizedAPIV2 = {
    type: 'reference';
    refType: 'document' | 'asset';
    label?: string;
    localized?: false;
} & (
    | { isUnset: true }
    | {
          isUnset?: false;
          refId: string;
          srcModelLabel?: string;
          srcObjectLabel?: string;
          isMissing?: boolean;
      }
);
export interface DocumentReferenceFieldLocalizedAPIV2 {
    type: 'reference';
    refType: 'document' | 'asset';
    label?: string;
    localized: true;
    locales: Record<
        string,
        {
            locale: string;
            refId: string;
            srcModelLabel?: string;
            srcObjectLabel?: string;
            isMissing?: boolean;
        }
    >;
}

/**
 * cross-reference
 */
export type DocumentCrossReferenceFieldAPIV2 = DocumentCrossReferenceFieldLocalizedAPIV2 | DocumentCrossReferenceFieldNonLocalizedAPIV2;
export type DocumentCrossReferenceFieldNonLocalizedAPIV2 = {
    type: 'cross-reference';
    refType: 'document' | 'asset';
    label?: string;
    localized?: false;
} & (
    | { isUnset: true }
    | {
          isUnset?: false;
          refId: string;
          refSrcType: string;
          refProjectId: string;
          refModelLabel?: string;
          refModelName?: string;
          refObjectLabel?: string;
          isMissing?: boolean;
      }
);
export interface DocumentCrossReferenceFieldLocalizedAPIV2 {
    type: 'cross-reference';
    refType: 'document' | 'asset';
    label?: string;
    localized: true;
    locales: Record<
        string,
        {
            locale: string;
            refId: string;
            refSrcType: string;
            refProjectId: string;
            refModelLabel?: string;
            refModelName?: string;
            refObjectLabel?: string;
            isMissing?: boolean;
        }
    >;
}

/**
 * image
 */
export type DocumentImageFieldAPIV2 = DocumentImageFieldNonLocalizedAPIV2 | DocumentImageFieldLocalizedAPIV2;
export type DocumentImageFieldNonLocalizedAPIV2 = {
    type: 'image';
    label?: string;
    localized?: false;
    source?: string;
} & (
    | { isUnset: true }
    | {
          isUnset?: false;
          sourceData?: any;
          fields: ImageFieldsAPIV2;
      }
);
export interface DocumentImageFieldLocalizedAPIV2 {
    type: 'image';
    label?: string;
    source?: string;
    localized: true;
    locales: Record<
        string,
        {
            locale: string;
            sourceData?: any;
            fields: ImageFieldsAPIV2;
        }
    >;
}
export type ImageFieldsAPIV2 = {
    title: DocumentStringLikeFieldNonLocalizedForTypeAPIV2<'string'>;
    url: DocumentStringLikeFieldNonLocalizedForTypeAPIV2<'string'>;
};

export type DocumentFieldAPIV2 =
    | DocumentStringLikeFieldAPIV2
    | DocumentMarkdownFieldAPIV2
    | DocumentNumberFieldAPIV2
    | DocumentBooleanFieldAPIV2
    | DocumentJsonFieldAPIV2
    | DocumentStyleFieldAPIV2
    | DocumentRichTextFieldAPIV2
    | DocumentFileFieldAPIV2
    | DocumentImageFieldAPIV2
    | DocumentObjectFieldAPIV2
    | DocumentModelFieldAPIV2
    | DocumentReferenceFieldAPIV2
    | DocumentCrossReferenceFieldAPIV2
    | DocumentListFieldAPIV2;

export type DocumentFieldNonLocalizedAPIV2 =
    | DocumentStringLikeFieldNonLocalizedAPIV2
    | DocumentMarkdownFieldNonLocalizedAPIV2
    | DocumentNumberFieldNonLocalizedAPIV2
    | DocumentBooleanFieldNonLocalizedAPIV2
    | DocumentJsonFieldNonLocalizedAPIV2
    | DocumentStyleFieldNonLocalizedAPIV2
    | DocumentRichTextFieldNonLocalizedAPIV2
    | DocumentFileFieldNonLocalizedAPIV2
    | DocumentImageFieldNonLocalizedAPIV2
    | DocumentObjectFieldNonLocalizedAPIV2
    | DocumentModelFieldNonLocalizedAPIV2
    | DocumentReferenceFieldNonLocalizedAPIV2
    | DocumentCrossReferenceFieldNonLocalizedAPIV2
    | DocumentListFieldNonLocalizedAPIV2;

export type DocumentFieldLocalizedAPIV2 =
    | DocumentStringLikeFieldLocalizedAPIV2
    | DocumentMarkdownFieldLocalizedAPIV2
    | DocumentNumberFieldLocalizedAPIV2
    | DocumentBooleanFieldLocalizedAPIV2
    | DocumentJsonFieldLocalizedAPIV2
    | DocumentStyleFieldLocalizedAPIV2
    | DocumentRichTextFieldLocalizedAPIV2
    | DocumentFileFieldLocalizedAPIV2
    | DocumentImageFieldLocalizedAPIV2
    | DocumentObjectFieldLocalizedAPIV2
    | DocumentModelFieldLocalizedAPIV2
    | DocumentReferenceFieldLocalizedAPIV2
    | DocumentCrossReferenceFieldLocalizedAPIV2
    | DocumentListFieldLocalizedAPIV2;

export type DocumentFieldNonLocalizedForTypeAPIV2<Type extends FieldType> = ExtractByType<DocumentFieldNonLocalizedAPIV2, Type>;
export type DocumentFieldForTypeAPIV2<Type extends FieldType> = ExtractByType<DocumentFieldAPIV2, Type>;
