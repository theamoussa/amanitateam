import { FieldType } from '@stackbit/types';

export type UpdateOperation = UpdateOperationSet | UpdateOperationUnset | UpdateOperationInsert | UpdateOperationRemove | UpdateOperationReorder;

export interface UpdateOperationBase {
    opType: string;
    fieldPath: (string | number)[];
    locale?: string;
}

export interface UpdateOperationSet extends UpdateOperationBase {
    opType: 'set';
    field: UpdateOperationField;
}

export interface UpdateOperationUnset extends UpdateOperationBase {
    opType: 'unset';
}

export interface UpdateOperationInsert extends UpdateOperationBase {
    opType: 'insert';
    index?: number;
    item: Exclude<UpdateOperationField, UpdateOperationListField>;
}

export interface UpdateOperationRemove extends UpdateOperationBase {
    opType: 'remove';
    index: number;
}

export interface UpdateOperationReorder extends UpdateOperationBase {
    opType: 'reorder';
    order: number[];
}

export type UpdateOperationField =
    | UpdateOperationValueField
    | UpdateOperationObjectField
    | UpdateOperationModelField
    | UpdateOperationReferenceField
    | UpdateOperationCrossReferenceField
    | UpdateOperationListField;

export type UpdateOperationValueFieldType = Exclude<FieldType, 'object' | 'model' | 'reference' | 'cross-reference' | 'list'>;

export type UpdateOperationValueField = DistributeUpdateOperationValueField<UpdateOperationValueFieldType>;

export type DistributeUpdateOperationValueField<Type extends UpdateOperationValueFieldType> = Type extends UpdateOperationValueFieldType
    ? UpdateOperationValueFieldForType<Type>
    : never;

export interface UpdateOperationValueFieldForType<Type extends UpdateOperationValueFieldType> {
    type: Type;
    value: any;
}

export interface UpdateOperationObjectField {
    type: 'object';
    object: Record<string, any>;
}

export interface UpdateOperationModelField {
    type: 'model';
    modelName: string;
    object: Record<string, any>;
}

export interface UpdateOperationReferenceField {
    type: 'reference';
    refType: 'document' | 'asset';
    refId: string;
}

export interface UpdateOperationCrossReferenceField {
    type: 'cross-reference';
    refType: 'document' | 'asset';
    refId: string;
    refSrcType: string;
    refProjectId: string;
}

export interface UpdateOperationListField {
    type: 'list';
    items: any[];
}
