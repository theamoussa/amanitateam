import { ImageModel, Model } from '@stackbit/sdk';
import { ScheduledAction } from '@stackbit/types';
import * as ContentStoreTypes from '../types';
import { SearchFilter, SearchFilterItem } from '../types';
export type SearchSchema = Record<string, Record<string, Record<string, Model | ImageModel>>>;
export declare const searchDocuments: (data: {
    query?: string;
    filter?: SearchFilter;
    models: Array<{
        srcProjectId: string;
        srcType: string;
        modelName: string;
    }>;
    documents: ContentStoreTypes.Document[];
    schema: SearchSchema;
    scheduledActions?: ScheduledAction[];
    locale?: string;
    defaultLocales?: Record<string, string>;
}) => {
    total: number;
    items: ContentStoreTypes.Document[];
};
export declare const isBooleanFieldMatches: ({ field, filter, locale }: {
    field: ContentStoreTypes.DocumentFieldForType<'boolean'>;
    filter: SearchFilterItem;
    locale?: string | undefined;
}) => boolean;
export declare const isDateFieldMatches: ({ field, filter, locale }: {
    field: ContentStoreTypes.DocumentFieldForType<'date' | 'datetime'>;
    filter: SearchFilterItem;
    locale?: string | undefined;
}) => boolean;
export declare const isListFieldMatches: ({ field, filter, locale, model, document }: {
    field: ContentStoreTypes.DocumentFieldForType<'list'>;
    filter: SearchFilterItem;
    model?: Model | undefined;
    document: ContentStoreTypes.Document;
    locale?: string | undefined;
}) => boolean;
//# sourceMappingURL=search-utils.d.ts.map