import { Logger } from '@stackbit/types';
import * as ContentStoreTypes from '../types';
export declare function pluralize(str: string, count: number): string;
export declare function logCreateDocument(options: {
    userLogger: Logger;
    srcType: string;
    srcProjectId: string;
    modelName: string;
    object?: Record<string, any>;
    locale?: string;
}): void;
export declare function logDocumentEvent(event: string, options: {
    userLogger: Logger;
    srcType: string;
    srcProjectId: string;
    srcDocumentId: string;
    locale?: string;
}): void;
export declare function logDocumentsEvent(event: string, options: {
    userLogger: Logger;
    objects: {
        srcType: string;
        srcProjectId: string;
        srcObjectId: string;
    }[];
    locale?: string;
}): void;
export declare function logUpdateDocument(options: {
    userLogger: Logger;
    srcType: string;
    srcProjectId: string;
    srcDocumentId: string;
    updateOperations: ContentStoreTypes.UpdateOperation[];
    locale?: string;
}): void;
export declare function logUpdateAsset(options: {
    userLogger: Logger;
    srcType: string;
    srcProjectId: string;
    srcAssetId: string;
    updateOperations: ContentStoreTypes.UpdateOperation[];
    locale?: string;
}): void;
export declare function logDuplicateDocument(options: {
    userLogger: Logger;
    srcType: string;
    srcProjectId: string;
    srcDocumentId: string;
    object?: Record<string, any>;
    locale?: string;
}): void;
export declare function logUploadAssets(options: {
    userLogger: Logger;
    srcType: string;
    srcProjectId: string;
    assets: ContentStoreTypes.UploadAssetData[];
    locale?: string;
}): void;
//# sourceMappingURL=user-log-utils.d.ts.map