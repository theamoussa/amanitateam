export interface FileCacheInterface {
    get(key: string): Promise<unknown>;
    set(key: string, value: unknown): Promise<void>;
    remove(key: string): Promise<void>;
}
export declare class FileCache implements FileCacheInterface {
    private readonly dirPath;
    private readonly keyPrefix;
    constructor({ dirPath, keyPrefix }: {
        dirPath: string;
        keyPrefix?: string;
    });
    get(key: string): Promise<unknown>;
    set(key: string, value: unknown): Promise<void>;
    remove(key: string): Promise<void>;
    private filePathKey;
}
/**
 * This no-op file cache is used to replace FileCache when Stackbit runs in Cloud.
 */
export declare class NoopFileCache implements FileCacheInterface {
    get(): Promise<unknown>;
    set(): Promise<void>;
    remove(): Promise<void>;
}
//# sourceMappingURL=file-cache.d.ts.map