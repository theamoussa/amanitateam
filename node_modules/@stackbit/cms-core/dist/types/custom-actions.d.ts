import { CustomActionGlobal, CustomActionBulk, CustomActionModel, CustomActionDocument, CustomActionModelObject, CustomActionObjectModel, CustomActionObjectField, CustomActionField, CustomActionState, CustomActionInputField, CustomActionPermissions } from '@stackbit/types';
import * as StackbitTypes from '@stackbit/types';
import { User } from './index';
export type CustomActionStateWithFinished = CustomActionState | 'finished' | 'failed';
export type CustomActionRunStateMap = Record<string, CustomActionRunState>;
export type CustomActionRunState = {
    isRunning?: boolean;
    userId?: string;
    /**
     * An object specifying the model the running action belong to.
     * This property is only applicable for actions of type 'modelGlobal' as
     * these actions are not defined inside a model but inside stackbit config.
     **/
    modelSpec?: APICustomActionModelSpecifier;
};
export type ExtendedCustomAction = ExtendedCustomActionGlobal | ExtendedCustomActionBulk | ExtendedCustomActionModelGlobal | ExtendedCustomActionModel | ExtendedCustomActionDocument | ExtendedCustomActionModelObject | ExtendedCustomActionObjectModel | ExtendedCustomActionObjectField | ExtendedCustomActionField;
export type ExtendedCustomActionGlobal = CustomActionGlobal & ContentStoreCustomActionCommonProps & {
    extendedType: 'global';
};
export type ExtendedCustomActionBulk = CustomActionBulk & ContentStoreCustomActionCommonProps & {
    extendedType: 'bulk';
};
export type ExtendedCustomActionModelGlobal = CustomActionModel & ContentStoreCustomActionCommonProps & {
    extendedType: 'modelGlobal';
    modelSpec?: APICustomActionModelSpecifier;
};
export type ExtendedCustomActionModel = CustomActionModel & ContentStoreCustomActionCommonProps & {
    extendedType: 'model';
    modelSpec: APICustomActionModelSpecifier;
};
export type ExtendedCustomActionDocument = CustomActionDocument & ContentStoreCustomActionCommonProps & {
    type: 'document';
    extendedType: 'document';
    documentWithSource: StackbitTypes.DocumentWithSource;
    modelWithSource: StackbitTypes.ModelWithSource;
};
export type ExtendedCustomActionModelObject = CustomActionModelObject & ContentStoreCustomActionCommonProps & {
    extendedType: 'modelObject';
    documentWithSource: StackbitTypes.DocumentWithSource;
    modelWithSource: StackbitTypes.ModelWithSource;
    modelField: StackbitTypes.FieldModel;
    objectModel: StackbitTypes.ModelWithSource<StackbitTypes.ObjectModel>;
    fieldPath: (string | number)[];
};
export type ExtendedCustomActionObjectModel = CustomActionObjectModel & ContentStoreCustomActionCommonProps & {
    type: 'object';
    extendedType: 'objectModel';
    documentWithSource: StackbitTypes.DocumentWithSource;
    modelWithSource: StackbitTypes.ModelWithSource;
    documentField: StackbitTypes.DocumentModelFieldNonLocalized;
    modelField: StackbitTypes.FieldModel;
    objectModel: StackbitTypes.ModelWithSource<StackbitTypes.ObjectModel>;
    fieldPath: (string | number)[];
};
export type ExtendedCustomActionObjectField = CustomActionObjectField & ContentStoreCustomActionCommonProps & {
    extendedType: 'objectField';
    documentWithSource: StackbitTypes.DocumentWithSource;
    modelWithSource: StackbitTypes.ModelWithSource;
    documentField: StackbitTypes.DocumentObjectFieldNonLocalized;
    modelField: StackbitTypes.FieldObject;
    fieldPath: (string | number)[];
};
export type ExtendedCustomActionField = CustomActionField & ContentStoreCustomActionCommonProps & {
    type: 'field';
    extendedType: 'field';
    documentWithSource: StackbitTypes.DocumentWithSource;
    modelWithSource: StackbitTypes.ModelWithSource;
    documentField: StackbitTypes.DocumentField | undefined;
    modelField: StackbitTypes.Field;
    fieldPath: (string | number)[];
};
export type ContentStoreCustomActionCommonProps = {
    type: string;
    extendedType: string;
    /**
     * The unique id of the action definition.
     * All actions, except actions of type 'model', can not run in parallel.
     * Actions of type 'model' can run in parallel and can be triggered by the
     * same user or by different users. The `actionId` of these executions will
     * be different that the ID of the action that was originally triggered.
     **/
    actionId: string;
    /** The id of the user who executed the action */
    userId?: string;
    label: string;
    isRunning?: boolean;
};
export type CustomActionType = 'global' | 'bulk' | 'model' | 'document' | 'object' | 'field';
export type APICustomAction = APICustomActionGlobal | APICustomActionBulk | APICustomActionModel | APICustomActionDocument | APICustomActionObject | APICustomActionField;
export interface APICustomActionGlobal extends APICustomActionCommonProps {
    type: 'global';
}
export interface APICustomActionBulk extends APICustomActionCommonProps {
    type: 'bulk';
}
export interface APICustomActionModel extends APICustomActionCommonProps {
    type: 'model';
    models?: string[];
}
export interface APICustomActionDocument extends APICustomActionCommonProps {
    type: 'document';
}
export interface APICustomActionObject extends APICustomActionCommonProps {
    type: 'object';
}
export interface APICustomActionField extends APICustomActionCommonProps {
    type: 'field';
}
export interface APICustomActionCommonProps {
    type: CustomActionType;
    name: string;
    label: string;
    icon?: string;
    inputFields?: CustomActionInputField[];
    actionId: string;
    /** The userId is set when the action is in 'running' state */
    userId?: string;
    state: CustomActionState;
    hidden?: boolean;
    permissions?: CustomActionPermissions;
}
export type APIRunCustomActionResponse = {
    actionId: string;
};
export type APIRunCustomActionRequest = APIRunCustomActionRequestGlobal | APIRunCustomActionRequestBulk | APIRunCustomActionRequestModelGlobal | APIRunCustomActionRequestModel | APIRunCustomActionRequestDocument | APIRunCustomActionRequestObject | APIRunCustomActionRequestField;
export interface APIRunCustomActionRequestGlobal extends APIRunCustomActionRequestCommonParams {
    actionType: 'global';
}
export interface APIRunCustomActionRequestBulk extends APIRunCustomActionRequestCommonParams {
    actionType: 'bulk';
    documents: APICustomActionDocumentSpecifier[];
}
export interface APIRunCustomActionRequestModelGlobal extends APIRunCustomActionRequestCommonParams {
    actionType: 'model';
    srcType: string;
    srcProjectId: string;
    modelName: string;
    location: 'new-card' | 'preset-card';
    presetId?: string;
}
export interface APIRunCustomActionRequestModel extends APIRunCustomActionRequestCommonParams {
    actionType: 'model';
    location: 'new-card' | 'preset-card';
    presetId?: string;
}
export interface APIRunCustomActionRequestDocument extends APIRunCustomActionRequestCommonParams {
    actionType: 'document';
}
export interface APIRunCustomActionRequestObject extends APIRunCustomActionRequestCommonParams {
    actionType: 'object';
}
export interface APIRunCustomActionRequestField extends APIRunCustomActionRequestCommonParams {
    actionType: 'field';
}
interface APIRunCustomActionRequestCommonParams {
    actionType: string;
    actionId: string;
    actionName: string;
    locale?: string;
    user?: User;
    pageUrl?: string;
    currentPageDocument?: APICustomActionDocumentSpecifier;
    inputData?: Record<string, any>;
}
export interface APIGetCustomActionRequest {
    customActionIds: string[];
    locale?: string;
    user?: User;
    pageUrl?: string;
    currentPageDocument?: APICustomActionDocumentSpecifier;
}
export interface APIGetRunningCustomActionsRequest {
    user: User;
}
export interface APICustomActionModelSpecifier {
    srcType: string;
    srcProjectId: string;
    modelName: string;
}
export interface APICustomActionDocumentSpecifier {
    srcType: string;
    srcProjectId: string;
    srcDocumentId: string;
}
export interface CustomActionStateChange {
    actionType: CustomActionType;
    actionId: string;
    actionName: string;
    state: CustomActionStateWithFinished;
    userId?: string;
    message?: string;
    percent?: number;
    success?: string;
    error?: string;
    result?: unknown;
}
export {};
//# sourceMappingURL=custom-actions.d.ts.map